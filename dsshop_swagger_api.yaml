swagger: "2.0"
info:
  title: "dsshop API"
  version: "1.0.0"
host: "localhost:3000"
basePath: "/api"

schemes:
- "http"

tags:
- name: "auth"
  description: "Authentication operations"
- name: "user"
  description: "Operations about user"
- name: "role"
  description: "Operations about role"
- name: "address"
  description: "Operations about address"
- name: "order"
  description: "Operations about order"
- name: "review"
  description: "Operations about review"
- name: "product"
  description: "Operations about product"
- name: "category"
  description: "Operations about category"

paths:
  /auth:
    post:
      tags:
      - "auth"
      summary: "Register"
      description: "Authentication operations."
      operationId: "signUp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "User informations of the registering user."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Account created!"
        "500":
          description: "Error processing."
    put:
      tags:
      - "auth"
      summary: "Update account"
      description: "Account related operations."
      operationId: "updateAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "User informations of the updating user."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Account updated!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "User not found."
        "500":
          description: "Error processing."
      security:
      - user_auth: []
      - x_access_token: []
    delete:
      tags:
      - "auth"
      summary: "Delete account"
      description: "Account related operations."
      operationId: "deleteAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-access-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Credentials (email and password) of the user."
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
              format: "email"
            password:
              type: "string"
              format: "password"
      responses:
        "200":
          description: "Account deleted!"
        "401":
          description: "Invalid password!"
        "404":
          description: "User not found."
        "500":
          description: "Error processing."
      security:
      - user_auth: []
      - x_access_token: []
  /auth/signin:
    post:
      tags:
      - "auth"
      summary: "Log in"
      description: "Authentication operations."
      operationId: "signIn"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Credentials (email and password) of the user."
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
              format: "email"
            password:
              type: "string"
              format: "password"
      responses:
        "200":
          description: "Signed in!"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
              fisrt_name:
                type: "string"
              last_name:
                type: "string"
              email:
                type: "string"
                format: "email"
              roles:
                type: "array"
                items:
                  type: "string"
              accessToken:
                type: "string"
        "401":
          description: "Invalid password!"
        "404":
          description: "User not found."
        "500":
          description: "Error processing."
  /user:
    get:
      tags:
      - "user"
      summary: "Get list of all users"
      description: "Operations on users."
      operationId: "getAllUsers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "List of all users."
          schema:
            type: "object"
            properties:
              users:
                type: "array"
                items:
                  $ref: "#/definitions/User"
        "404":
          description: "Users not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "Operations on users."
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "User informations."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "User created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /user/{id}:
    get:
      tags:
      - "user"
      summary: "Get user by id"
      description: "Operations on users."
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User id."
        required: true
        type: "string"
      responses:
        "200":
          description: "User found!"
          schema:
            $ref: "#/definitions/User"
        "401":
          description: "Unauthorized!"
        "404":
          description: "User not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "user"
      summary: "Update user"
      description: "Operations on users."
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "User informations."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "User updated!"
          schema:
            $ref: "#/definitions/User"
        "401":
          description: "Unauthorized!"
        "404":
          description: "User not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "Operations on users."
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User id."
        required: true
        type: "string"
      responses:
        "200":
          description: "User deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "User not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /role:
    get:
      tags:
      - "role"
      summary: "Get list of all roles"
      description: "Operations on roles."
      operationId: "getAllRoles"
      produces:
      - "application/json"
      responses:
        "200":
          description: "List of all roles."
          schema:
            type: "object"
            properties:
              roles:
                type: "array"
                items:
                  $ref: "#/definitions/Role"
        "404":
          description: "Roles not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    post:
      tags:
      - "role"
      summary: "Create role"
      description: "Operations on roles."
      operationId: "createRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Role informations."
        required: true
        schema:
          $ref: "#/definitions/Role"
      responses:
        "200":
          description: "Role created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /role/{id}:
    get:
      tags:
      - "role"
      summary: "Get role by id"
      description: "Operations on roles."
      operationId: "getRoleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Role id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Role found!"
          schema:
            $ref: "#/definitions/Role"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Role not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "role"
      summary: "Update role"
      description: "Operations on roles."
      operationId: "updateRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Role id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Role informations."
        required: true
        schema:
          $ref: "#/definitions/Role"
      responses:
        "200":
          description: "Role updated!"
          schema:
            $ref: "#/definitions/Role"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Role not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "role"
      summary: "Delete role"
      description: "Operations on roles."
      operationId: "deleteRole"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Role id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Role deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Role not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /address:
    post:
      tags:
      - "address"
      summary: "Create address"
      description: "Operations on addresses."
      operationId: "createAddress"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Address informations."
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        "200":
          description: "Address created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /address/{id}:
    get:
      tags:
      - "address"
      summary: "Get address by id"
      description: "Operations on addresses."
      operationId: "getAddressById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Address id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Address found!"
          schema:
            $ref: "#/definitions/Address"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Address not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "address"
      summary: "Update address"
      description: "Operations on addresses."
      operationId: "updateAddress"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Address id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Address informations."
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        "200":
          description: "Address updated!"
          schema:
            $ref: "#/definitions/Address"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Address not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "address"
      summary: "Delete address"
      description: "Operations on addresses."
      operationId: "deleteAddress"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Address id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Address deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Address not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /order:
    get:
      tags:
      - "order"
      summary: "Get list of all orders"
      description: "Operations on orders."
      operationId: "getAllOrders"
      produces:
      - "application/json"
      responses:
        "200":
          description: "List of all orders."
          schema:
            type: "object"
            properties:
              roles:
                type: "array"
                items:
                  $ref: "#/definitions/Order"
        "404":
          description: "Orders not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    post:
      tags:
      - "order"
      summary: "Create order"
      description: "Operations on orders."
      operationId: "createOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Order informations."
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "Order created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /order/{id}:
    get:
      tags:
      - "order"
      summary: "Get order by id"
      description: "Operations on orders."
      operationId: "getOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Order id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Order found!"
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Order not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "order"
      summary: "Update order"
      description: "Operations on orders."
      operationId: "updateOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Order id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Order informations."
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "Order updated!"
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Order not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "order"
      summary: "Delete order"
      description: "Operations on orders."
      operationId: "deleteOrder"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Order id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Order deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Order not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /review:
    post:
      tags:
      - "review"
      summary: "Create review"
      description: "Operations on reviews."
      operationId: "createReview"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Review informations."
        required: true
        schema:
          $ref: "#/definitions/Review"
      responses:
        "200":
          description: "Review created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /review/{id}:
    get:
      tags:
      - "review"
      summary: "Get review by id"
      description: "Operations on reviews."
      operationId: "getReviewById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Review id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Review found!"
          schema:
            $ref: "#/definitions/Review"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Review not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "review"
      summary: "Update review"
      description: "Operations on reviews."
      operationId: "updateReview"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Review id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Review informations."
        required: true
        schema:
          $ref: "#/definitions/Review"
      responses:
        "200":
          description: "Review updated!"
          schema:
            $ref: "#/definitions/Review"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Review not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "review"
      summary: "Delete review"
      description: "Operations on reviews."
      operationId: "deleteReview"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Review id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Review deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Review not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /product:
    get:
      tags:
      - "product"
      summary: "Get list of all products"
      description: "Operations on products."
      operationId: "getAllProducts"
      produces:
      - "application/json"
      responses:
        "200":
          description: "List of all products."
          schema:
            type: "object"
            properties:
              roles:
                type: "array"
                items:
                  $ref: "#/definitions/Product"
        "404":
          description: "Product not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    post:
      tags:
      - "product"
      summary: "Create product"
      description: "Operations on products."
      operationId: "createProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Product informations."
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          description: "Product created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /product/{id}:
    get:
      tags:
      - "product"
      summary: "Get product by id"
      description: "Operations on products."
      operationId: "getProductById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Product found!"
          schema:
            $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Product not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "product"
      summary: "Update product"
      description: "Operations on products."
      operationId: "updateProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Product informations."
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          description: "Product updated!"
          schema:
            $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Product not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "product"
      summary: "Delete product"
      description: "Operations on products."
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Product deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Product not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /category:
    get:
      tags:
      - "category"
      summary: "Get list of all categories"
      description: "Operations on categories."
      operationId: "getAllCategories"
      produces:
      - "application/json"
      responses:
        "200":
          description: "List of all categories."
          schema:
            type: "object"
            properties:
              roles:
                type: "array"
                items:
                  $ref: "#/definitions/Category"
        "404":
          description: "Categories not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    post:
      tags:
      - "category"
      summary: "Create category"
      description: "Operations on categories."
      operationId: "createCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Category informations."
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Category created!"
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
  /category/{id}:
    get:
      tags:
      - "category"
      summary: "Get category by id"
      description: "Operations on categories."
      operationId: "getCategoryById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Category id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Category found!"
          schema:
            $ref: "#/definitions/Category"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Category not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    put:
      tags:
      - "category"
      summary: "Update category"
      description: "Operations on categories."
      operationId: "updateCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Category id."
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Category informations."
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Category updated!"
          schema:
            $ref: "#/definitions/Category"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Category not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []
    delete:
      tags:
      - "category"
      summary: "Delete category"
      description: "Operations on categories."
      operationId: "deleteCategory"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Category id."
        required: true
        type: "string"
      responses:
        "200":
          description: "Category deleted!"
        "401":
          description: "Unauthorized!"
        "404":
          description: "Category not found."
        "500":
          description: "Error processing."
      security:
      - mod_admin_auth: []
      - x_access_token: []

securityDefinitions:
  user_auth:
    type: "basic"
    description: "Role required: User."
  mod_admin_auth:
    type: "basic"
    description: "Roles required: Moderator, Admin."
  x_access_token:
    type: "apiKey"
    name: "x-access-token"
    in: "header"

definitions:
  Role:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "User roles."
        enum:
        - "user"
        - "moderator"
        - "admin"
    xml:
      name: "Role"
  Address:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      address:
        type: "string"
      zipcode:
        type: "string"
      country:
        type: "string"
      is_billing:
        type: "boolean"
        default: true
    xml:
      name: "Address"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      fisrt_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone_indicator:
        type: "string"
      phone:
        type: "string"
      password:
        type: "string"
        format: "password"
      birth_date:
        type: "string"
        format: "date"
      confirmed:
        type: "boolean"
        default: false
      roles:
        type: "array"
        items:
          $ref: "#/definitions/Role"
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/Address"
      orders:
        type: "array"
        items:
          $ref: "#/definitions/Order"
      reviews:
        type: "array"
        items:
          $ref: "#/definitions/Review"
    xml:
      name: "User"
  Review:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      mark:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      comment:
        type: "string"
      up_votes:
        type: "integer"
        format: "int64"
      down_votes:
        type: "integer"
        format: "int64"
      posted_on:
        type: "string"
        format: "date-time"
      edited_on:
        type: "string"
        format: "date-time"
      user:
        $ref: "#/definitions/User"
    xml:
      name: "Review"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "Categories."
        enum:
        - "Make-up"
        - "Perfumes and fragrances"
        - "Accessories"
    xml:
      name: "Category"
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      reference:
        type: "string"
      image_urls:
        type: "array"
        xml:
          name: "image_url"
          wrapped: true
        items:
          type: "string"
      title:
        type: "string"
      description:
        type: "string"
      quantity:
        type: "integer"
        format: "int64"
      price:
        type: "string"
      is_available:
        type: "boolean"
        default: false
      categories:
        type: "array"
        items:
          $ref: "#/definitions/Category"
      reviews:
        type: "array"
        items:
          $ref: "#/definitions/Review"
    xml:
      name: "Product"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      reference:
        type: "string"
      order_date:
        type: "string"
        format: "date-time"
      shipping_date:
        type: "string"
        format: "date-time"
      delivery_date:
        type: "string"
        format: "date-time"
      returned:
        type: "boolean"
        default: false
      status:
        type: "string"
        description: "Order status."
        enum:
        - "precommand"
        - "placed"
        - "approved"
        - "preparation"
        - "shipped"
        - "delivered"
        - "cancelled"
        - "refunded"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"
      address:
        $ref: "#/definitions/Address"
    xml:
      name: "Order"
